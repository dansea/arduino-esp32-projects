#include <WiFi.h>
#include <NTPClient.h>
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
 #include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

//const char *ssid     = "YOUR_SSID";
//const char *password = "YOUR_PASS";

const long utcOffsetInSeconds = 10800; //смещение UTC для Москвы


// Определение NTP-клиента для получения времени
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", utcOffsetInSeconds);


boolean isFirstStart = true;
int hours = 0;
int minutes = 0;
int seconds = 0;

int localSeconds =0;

uint32_t lastCheckTime = 0;
uint32_t CheckPeriod = 0; //время между сверками времени с сервером
uint32_t temp = 0;


//----------работа с адресной лентой----------------

#define PIN 4 //пин ленты
#define NUMPIXELS 164 //число светодиодов в ленте

Adafruit_NeoPixel pixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);


//--------------------------------------------------




void setup()
{
  Serial.begin(115200);

  WiFi.begin(ssid, password);

  while ( WiFi.status() != WL_CONNECTED ) 
  {
    delay ( 500 );
    Serial.print ( "." );
  }

  timeClient.begin();


    // These lines are specifically to support the Adafruit Trinket 5V 16 MHz.
    // Any other board, you can remove this part (but no harm leaving it):
  #if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
    clock_prescale_set(clock_div_1);
  #endif

  pixel.begin();
//  pixel.setBrightness(50);
  pixel.clear(); 
  
}

void loop() 
{
 
  if (isFirstStart)//при первом запуске системы - сразу синхронизируем время с сервером в интернете
  {
    timeClient.update();
  
    hours = timeClient.getHours();
    minutes = timeClient.getMinutes();
    seconds = timeClient.getSeconds();

    lastCheckTime = millis();
    isFirstStart=false;    
  }
  else if ( (millis()-lastCheckTime)>=CheckPeriod )
  {
    timeClient.update();
  
    hours = timeClient.getHours();
    minutes = timeClient.getMinutes();
    seconds = timeClient.getSeconds();

    lastCheckTime = millis();
  }

  timer ();
  timeBurner (hours, minutes);
}

//----------------------------------------------------------------------------------------------------------------------------------------------------------------------

void timeBurner (int hours, int minutes) //функция отвечает за вывод надписей
{
  int localHours;
  int localMinutes;


//номер члена в массиве:         0 1 2 3  4  5  6  7  8  9  10 11 12 13 14
//ПАМЯТКА: сколько часов->       1 2 2 3  4  5  6  7  8  9  10  н ч  ч  ч
  int hoursStartPixelsBase [] = {0,4,7,10,13,19,23,28,32,38,44,50,57,60,64}; //смотреть в ворде
  int pixelsCountForHours [] =  {4,3,3, 6, 4, 5, 4, 6, 6, 6, 6, 7,3, 4, 5};


//номер члена в массиве:           0    1    2    3    4    5    6    7    8   9    10   11   12  13   14  15  16  17  18
//ПАМЯТКА: сколько минут->         1    2    3    4    5    6    7    8    9   10   н    м    м    м   1   20  40  50  дц
  int minutesStartPixelsBase [] = {95, 103, 106, 109, 115, 119, 124, 128, 134, 89, 140, 147, 153, 159, 99, 72, 80, 85, 75}; //смотреть в ворде
  int pixelsCountForMinutes [] =  {4,   3,   3,   6,   4,   5,   4,   6,   6,  6,   7,   6,   6,   5,  4,   8,  5,  10, 5};


  int startPixel = 0;
  int startPixelOffset = 0;
  int pixelsCount = 0;


//----яркость светодиодов. Могут принимать значения от 0 до 255---------
  int brightnessRed = 255;
  int brightnessGreen = 255;
  int brightnessBlue = 255;  
//----------------------------------------------------------------------

 
  if ( (localHours != hours)||(localMinutes != minutes) )//если произошло изменение времени,
                                                         //очищаем экран и выводим новые значения
  {
     pixel.clear();//выключаем все светодиоды
                   //можно было бы и более изящно сделать, использовать динамические массивы,
                   //записывать туда только включенные светодиоды и потом выключать только их -
                   //но "и так сойдет". Тем более, что это раздует код -
                   //придется обрабатывать и часы и минуты, проходить их в цикле, выключая их,
                   //а хочется компактного кода ;-)

     
        
     if (hours>12) //с сервера время приходит в 24-часовом формате, поэтому приводим к 12-ти часовому
     {
        localHours = hours - 12;      
     }
     else
     {
        localHours = hours;      
     }

  
    //выводим новое время
    if (localHours<=10)
    {
           startPixel = (localHours-1);
           startPixelOffset = startPixel;
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++; 
         }       
       
    }
    else if (localHours==11)
    {
       
           startPixel = 0;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "ОДИН"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         } 
         
           startPixel = 11;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "НАДЦАТЬ"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         } 

    }
    else if (localHours==12)
    {
           startPixel = 2;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "ДВЕ"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++; 
         } 

           startPixel = 11;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "НАДЦАТЬ"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         } 
     }

      //---------Далее - добавляем к показанным часам - "ЧАС" или "ЧАСА" или "ЧАСОВ"-----------------

      if (localHours==1)
      {
           startPixel = 12;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "ЧАС"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         }         
      }
      else if ( (localHours>=2)&&(localHours<=4) )
      {
           startPixel = 13;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "ЧАСА"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         }          
      }
      else if ( (localHours>=5)&&(localHours<=12) )
      {
           startPixel = 14;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForHours [startPixel];
    
         for (int i=0; i<pixelsCount; i++)//вывели "ЧАСОВ"
         {
             pixel.setPixelColor(hoursStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         }          
      }      

  
     
  //--------------ДАЛЬШЕ ВЕДЕМ ОБРАБОТКУ МИНУТ------------------------------------------------   
     
     localMinutes = minutes; 
     

    if ( (localMinutes>=1)&&(localMinutes<=10)  )
    {
           startPixel = localMinutes;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForMinutes [startPixel];
    
         for (int i=0; i<pixelsCount; i++)
         {
             pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++; 
         }      
    }
   else  if ( (localMinutes>=11)&&(localMinutes<=19)  )
    {
              if (localMinutes==1)
              {
                   startPixel = (localMinutes-11);
                   startPixelOffset = startPixel;       
                   pixelsCount = pixelsCountForMinutes [startPixel];
            
                 for (int i=0; i<pixelsCount; i++)
                 {
                     pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                     startPixelOffset++; 
                 }                 
              }
              else if ( (localMinutes>=2)&&(localMinutes<=3)  )
              {
                   startPixel = (localMinutes-11);
                   startPixelOffset = startPixel;       
                   pixelsCount = pixelsCountForMinutes [startPixel];
            
                 for (int i=0; i<pixelsCount; i++)
                 {
                     pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                     startPixelOffset++;                 
                 }
              }
              else if (localMinutes>=4)
              {
                   startPixel = (localMinutes-11);
                   startPixelOffset = startPixel;       
                   pixelsCount = pixelsCountForMinutes [startPixel]-1;
            
                 for (int i=0; i<pixelsCount; i++)
                 {
                     pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                     startPixelOffset++;                 
                 }
              }              
    }
   else  if ( (localMinutes>=20)&&(localMinutes<=29)  )
    {
              startPixel = 15;
              startPixelOffset = startPixel;       
              pixelsCount = pixelsCountForMinutes [startPixel];
            
              for (int i=0; i<pixelsCount; i++)//вывели "ДВАДЦАТЬ"
              {
                  pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                  startPixelOffset++;                 
              }

               startPixel = localMinutes-20;
               startPixelOffset = startPixel;       
               pixelsCount = pixelsCountForMinutes [startPixel];//вывели число "ДВЕ", "ТРИ" и т.д.
        
             for (int i=0; i<pixelsCount; i++)
             {
                 pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                 startPixelOffset++; 
             }                   

                    
    }
   else  if ( (localMinutes>=30)&&(localMinutes<=39)  )
    {
              startPixel = 15;
              startPixelOffset = startPixel;       
              pixelsCount = pixelsCountForMinutes [startPixel];
            
              for (int i=0; i<pixelsCount; i++)//вывели "ТРИ"
              {
                  pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                  startPixelOffset++;                 
              }

              startPixel = 18;
              startPixelOffset = startPixel;       
              pixelsCount = pixelsCountForMinutes [startPixel];
            
              for (int i=0; i<pixelsCount; i++)//вывели "ДЦАТЬ"
              {
                  pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                  startPixelOffset++;                 
              }
               
               startPixel = localMinutes-30;
               startPixelOffset = startPixel;       
               pixelsCount = pixelsCountForMinutes [startPixel];//вывели число "ДВЕ", "ТРИ" и т.д.
        
             for (int i=0; i<pixelsCount; i++)
             {
                 pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                 startPixelOffset++; 
             }                   
    }
   else  if ( (localMinutes>=40)&&(localMinutes<=49)  )
    {
              startPixel = 16;
              startPixelOffset = startPixel;       
              pixelsCount = pixelsCountForMinutes [startPixel];
            
              for (int i=0; i<pixelsCount; i++)//вывели "СОРОК"
              {
                  pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                  startPixelOffset++;                 
              }      

               startPixel = localMinutes-40;
               startPixelOffset = startPixel;       
               pixelsCount = pixelsCountForMinutes [startPixel];//вывели число "ДВЕ", "ТРИ" и т.д.
        
             for (int i=0; i<pixelsCount; i++)
             {
                 pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                 startPixelOffset++; 
             }     
    }
   else  if ( (localMinutes>=50)&&(localMinutes<=59)  )
    {
              startPixel = 17;
              startPixelOffset = startPixel;       
              pixelsCount = pixelsCountForMinutes [startPixel]-1;
            
              for (int i=0; i<pixelsCount; i++)//вывели "ПЯТЬДЕСЯТ"
              {
                  pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                  startPixelOffset++;                 
              }

               startPixel = localMinutes-50;
               startPixelOffset = startPixel;       
               pixelsCount = pixelsCountForMinutes [startPixel];//вывели число "ДВЕ", "ТРИ" и т.д.
        
             for (int i=0; i<pixelsCount; i++)
             {
                 pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
                 startPixelOffset++; 
             }  
    }


    //---------Далее - добавляем к показанным минутам - "МИНУТА" или "МИНУТЫ" или "МИНУТ"-----------------

    if ( (localMinutes==1) || (localMinutes==21) || (localMinutes==31) || (localMinutes==41) || (localMinutes==51) )
    {

           startPixel = 11;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForMinutes [startPixel];       

         for (int i=0; i<pixelsCount; i++)//вывели "МИНУТА"
         {
             pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         } 
    }
    else if (  ( (localMinutes>=2)&&(localMinutes<=4) ) || ( (localMinutes>=22)&&(localMinutes<=24) ) || ( (localMinutes>=32)&&(localMinutes<=34) || ( (localMinutes>=42)&&(localMinutes<=44) ) || ( (localMinutes>=52)&&(localMinutes<=54) )  ) )
    {
           startPixel = 12;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForMinutes [startPixel];       

         for (int i=0; i<pixelsCount; i++)//вывели "МИНУТЫ"
         {
             pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         }       
    }
    else if (  ( (localMinutes>=5)&&(localMinutes<=20) ) || ( (localMinutes>=25)&&(localMinutes<=30) ) || ( (localMinutes>=35)&&(localMinutes<=40) ) || ( (localMinutes>=45)&&(localMinutes<=50) ) || ( (localMinutes>=55)&&(localMinutes<=59) ) )
    {
           startPixel = 13;
           startPixelOffset = startPixel;       
           pixelsCount = pixelsCountForMinutes [startPixel];       

         for (int i=0; i<pixelsCount; i++)//вывели "МИНУТ"
         {
             pixel.setPixelColor(minutesStartPixelsBase [startPixelOffset], pixel.Color(brightnessRed,brightnessGreen,brightnessBlue));
             startPixelOffset++;
         }       
    }    
  //ПРИМЕЧАНИЕ: случай, когда localMinutes == 0  -  не обрабатывается, т.е. на экран будут выведены только часы, без минут

}
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void timer ()// функция-таймер. По сути - обычные часы
{



  if ( (millis()-localSeconds)>=1000 )//при некотором подтормаживании 
                                      //системы-тут могут быть проблемы-
                                      //тогда надо будет реализовать иначе
  {
      localSeconds += 1000;
      
      if (seconds<59)
      {
         seconds = seconds+1;
      }
      else if (seconds==59)//можно и без else if - это просто для наглядности
      {
         seconds = 0;

         if (minutes<59)
         {
            minutes = minutes+1;
         }
         else if (minutes==59)//можно и без else if - это просто для наглядности
         {
            minutes = 0;

            if (hours<12)
            {
              hours = hours + 1;
            }
            else if (hours==12)//можно и без else if - это просто для наглядности
            {
              hours = 1;             
            }
         }
      }
     
  }

   
}
